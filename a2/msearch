#!/usr/bin/python3

"""
The msearch (movie search) script lists the movie title, year, content rating, IMDB score and 
genres of those movies with the title, actor, or director matching the given substring 
(case insensitive), one per line. It accepts any number of given substrings (but at least one).
If more than one substring are provided, they should be considered as a conjunctive selection 
query (i.e., via AND). 
"""

import sqlite3,sys

if len(sys.argv) < 2 :
  print("Usage:", sys.argv[0], "SUBSTRING-1 SUBSTRING-2 SUBSTRING-3 ...")
  sys.exit(1)

# create a list contain the input
strlist = list()
for i in range(1, len(sys.argv)):
  strlist.append(sys.argv[i])

con = sqlite3.connect('a2.db')
cur = con.cursor()

list_all = None
for i in strlist:
  cur.execute(
    'select tit, yr, cr, imdb, gen\
    from (\
      select mo.title as tit, mo.year as yr, mo.content_rating as cr, r.imdb_score as imdb, \
      group_concat(distinct(gt.genre)) as gen, group_concat(acr.name) as arname, group_concat(dr.name) as drname\
      from movie mo \
      left join rating r on r.movie_id = mo.id \
      left join director dr on dr.id = mo.director_id \
      left join acting ac on ac.movie_id = mo.id \
      left join actor acr on acr.id = ac.actor_id \
      left join genre gt on mo.id = gt.movie_id\
      group by mo.id \
      order by mo.year desc, r.imdb_score desc, mo.title asc)\
    where tit like {} or arname like {} or drname like {}'.format(f"'%{i}%'", f"'%{i}%'", f"'%{i}%'")
  )

  if list_all is None:
    list_all = cur.fetchall()
  else:
    # find the interscation of t and list_all
    t = cur.fetchall()
    list_all = [value for value in t if value in list_all]

  
count = 1
for t in list_all:
  title = t[0]
  list_print = list()
  if t[1] is not None:
    list_print.append("{}".format(t[1]))
  if t[2] is not None:
    list_print.append(t[2])
  if t[3] is not None:
    list_print.append("{:.1f}".format(t[3]))
  string = '('+ ', '.join([str(item) for item in list_print]) + ')'
  genres = t[4]
  if genres is None:
    print(f'{count}. {title} {string}')
  else:
    print(f'{count}. {title} {string} [{genres}]')
  count = count + 1
con.close()



